{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","services/api.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","fetchImages","name","page","API","axios","get","then","images","Searchbar","onSubmit","useState","image","setImage","className","s","SearchForm","e","preventDefault","trim","Notiflix","Notify","info","hits","type","SearchForm_Button","SearchForm_Button_Label","SearchForm_Input","placeholder","value","onChange","target","ImageGallery","this","props","children","Component","ImageGalleryItem","imageGallery","addImageSrc","showModal","length","map","img","idx","ImageGallery_Item","src","webformatURL","alt","tags","ImageGallery_Item_Image","onClick","largeImageURL","Button","submitClick","currentPage","totalHits","Modal","modalImg","useEffect","onEscKey","code","window","addEventListener","removeEventListener","Overlay","currentTarget","App","params","setImages","setName","setPage","setHits","showLoader","setShowLoader","showModalWindow","setShowModalWindow","setModalImg","showLoadMoreBtn","data","failure","prevImages","catch","error","finally","bottomScroll","status","addValues","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da2ad758.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery_Item\":\"ImageGalleryItem_ImageGallery_Item__n1wOc\",\"ImageGallery_Item_Image\":\"ImageGalleryItem_ImageGallery_Item_Image__1WG5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchForm_Button\":\"Searchbar_SearchForm_Button__3SXME\",\"SearchForm_Button_Label\":\"Searchbar_SearchForm_Button_Label___XPvK\",\"SearchForm_Input\":\"Searchbar_SearchForm_Input__1KgLz\"};","import axios from 'axios';\n\nconst API_URL = 'https://pixabay.com/api/';\nconst API_KEY = '19797525-803e10272823be06aee41a8f4';\n\nfunction fetchImages(name, page) {\n  const API = `${API_URL}?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return axios.get(API).then(images => {\n    return images;\n  });\n}\n\nexport default fetchImages;\n","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [image, setImage] = useState('');\n\n  // ---------- getting Query from input ----------\n\n  const inputChange = e => {\n    setImage(e.target.value);\n  };\n\n  // ---------- check Input empty or not ----------\n\n  const formChange = e => {\n    e.preventDefault();\n\n    image.trim() === ''\n      ? Notiflix.Notify.info('Please write what you want to find')\n      : onSubmit({ image, page: 1, hits: 0 });\n  };\n\n  // ---------- render ----------\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={formChange}>\n        <button type=\"submit\" className={s.SearchForm_Button}>\n          <span className={s.SearchForm_Button_Label}>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          className={s.SearchForm_Input}\n          placeholder=\"Search photos\"\n          value={image}\n          onChange={inputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\n// ---------- propTypes options ----------\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// class Searchbar extends Component {\n//   state = {\n//     image: \"\",\n//   };\n//   // ---------- getting Query from input ----------\n//   inputChange = (e) => {\n//     this.setState({ image: e.target.value });\n//   };\n//   // ---------- check Input empty or not ----------\n//   formChange = (e) => {\n//     e.preventDefault();\n\n//     this.state.image.trim() === \"\"\n//       ? Notiflix.Notify.info(\"Please write what you want to find\")\n//       : this.props.onSubmit({ image: this.state.image, page: 1, hits: 0 });\n//   };\n//   // ---------- render ----------\n//   render() {\n//     return (\n//       <header className={s.Searchbar}>\n//         <form className={s.SearchForm} onSubmit={this.formChange}>\n//           <button type=\"submit\" className={s.SearchForm_Button}>\n//             <span className={s.SearchForm_Button_Label}>Search</span>\n//           </button>\n\n//           <input\n//             type=\"text\"\n//             className={s.SearchForm_Input}\n//             placeholder=\"Search photos\"\n//             value={this.state.image}\n//             onChange={this.inputChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n// // ---------- propTypes options ----------\n// Searchbar.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// export default Searchbar;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\n\nclass ImageGallery extends Component {\n  // ---------- render ----------\n  render() {\n    return <ul className={s.ImageGallery}>{this.props.children}</ul>;\n  }\n}\n// ---------- propTypes options ----------\nImageGallery.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default ImageGallery;\n","// import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  imageGallery,\n  addImageSrc,\n  showModal,\n}) {\n  // ---------- add link for Modal large image  ----------\n\n  const imageSrcHandler = e => {\n    addImageSrc(e);\n    showModal(true);\n  };\n\n  // ---------- render ----------\n\n  return (\n    imageGallery.length !== 0 &&\n    imageGallery.map((img, idx) => (\n      <li key={idx} className={s.ImageGallery_Item}>\n        <img\n          src={img.webformatURL}\n          alt={img.tags}\n          className={s.ImageGallery_Item_Image}\n          onClick={() => imageSrcHandler(img.largeImageURL)}\n        />\n      </li>\n    ))\n  );\n}\n\n// ---------- propTypes options ----------\n\nImageGalleryItem.propTypes = {\n  imageGallery: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showModal: PropTypes.func.isRequired,\n  addImageSrc: PropTypes.func.isRequired,\n};\n\n// class ImageGalleryItem extends Component {\n//   // ---------- add link for Modal large image  ----------\n//   addImageSrc = (e) => {\n//     this.props.addImageSrc(e.target.dataset.src);\n//     this.props.showModal(true);\n//   };\n//   // ---------- render ----------\n//   render() {\n//     return (\n//       this.props.imageGallery.length !== 0 &&\n//       this.props.imageGallery.map((img) => (\n//         <li key={img.id} className={s.ImageGallery_Item}>\n//           <img\n//             src={img.webformatURL}\n//             alt={img.tags}\n//             data-src={img.largeImageURL}\n//             className={s.ImageGallery_Item_Image}\n//             onClick={this.addImageSrc}\n//           />\n//         </li>\n//       ))\n//     );\n//   }\n// }\n// // ---------- propTypes options ----------\n// ImageGalleryItem.propTypes = {\n//   imageGallery: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   showModal: PropTypes.func.isRequired,\n//   addImageSrc: PropTypes.func.isRequired,\n// };\n\n// export default ImageGalleryItem;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nclass Button extends Component {\n  // ---------- change page +1 ----------\n  submitClick = e => {\n    e.preventDefault();\n    this.props.onSubmit({\n      page: this.props.currentPage + 1,\n      hits: 0,\n    });\n  };\n  // ---------- render ----------\n  render() {\n    return (\n      this.props.totalHits !== 0 && (\n        <button type=\"submit\" className={s.Button} onClick={this.submitClick}>\n          Load more pics\n        </button>\n      )\n    );\n  }\n}\n// ---------- propTypes options ----------\nButton.propTypes = {\n  totalHits: PropTypes.number,\n  onSubmit: PropTypes.func.isRequired,\n  currentPage: PropTypes.number,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nexport default function Modal({ modalImg, showModal }) {\n  useEffect(() => {\n    // ---------- close Modal window with ESC key ----------\n\n    const onEscKey = e => {\n      if (e.code === 'Escape') {\n        showModal(false);\n      }\n    };\n\n    // ---------- adding ESC key listener ----------\n\n    window.addEventListener('keydown', onEscKey);\n\n    // ---------- removing ESC key listener ----------\n\n    return () => {\n      window.removeEventListener('keydown', onEscKey);\n    };\n  }, [showModal]);\n\n  // ---------- close Modal window with Backdrop click ----------\n\n  const onBackDropClick = e => {\n    if (e.target === e.currentTarget) {\n      showModal(false);\n    }\n  };\n\n  // ---------- render ----------\n\n  return (\n    <div className={s.Overlay} onClick={onBackDropClick}>\n      <div className={s.Modal}>\n        <img src={modalImg} alt={modalImg} />\n      </div>\n    </div>\n  );\n}\n\n// ---------- propTypes options ----------\n\nModal.propTypes = {\n  modalImg: PropTypes.string,\n  showModal: PropTypes.func,\n};\n\n// class Modal extends Component {\n//   // ---------- close Modal window with ESC key ----------\n//   onEscKey = (e) => {\n//     if (e.code === \"Escape\") {\n//       this.props.showModal(false);\n//     }\n//   };\n//   // ---------- close Modal window with Backdrop click ----------\n//   onBackDropClick = (e) => {\n//     if (e.target === e.currentTarget) {\n//       this.props.showModal(false);\n//     }\n//   };\n//   // ---------- adding ESC key listener ----------\n//   componentDidMount() {\n//     window.addEventListener(\"keydown\", this.onEscKey);\n//   }\n//   // ---------- removing ESC key listener ----------\n//   componentWillUnmount() {\n//     window.removeEventListener(\"keydown\", this.onEscKey);\n//   }\n//   // ---------- render ----------\n//   render() {\n//     return (\n//       <div className={s.Overlay} onClick={this.onBackDropClick}>\n//         <div className={s.Modal}>\n//           <img src={this.props.modalImg} alt={this.props.modalImg} />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// // ---------- propTypes options ----------\n// Modal.propTypes = {\n//   modalImg: PropTypes.string.isRequired,\n//   showLoader: PropTypes.bool.isRequired,\n//   showModal: PropTypes.func.isRequired,\n// };\n\n// export default Modal;\n","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\n\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\nimport fetchImages from './services/api';\n\nimport Searchbar from './components/Searchbar/Searchbar.js';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nexport default function App(params) {\n  const [images, setImages] = useState([]);\n  const [name, setName] = useState('');\n  const [page, setPage] = useState(1);\n  const [hits, setHits] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showModalWindow, setShowModalWindow] = useState(false);\n  const [modalImg, setModalImg] = useState('');\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n\n    showLoadMoreBtn(true);\n    fetchImages(name, page)\n      .then(images => {\n        setHits(images.data.hits.length);\n        if (images.data.hits.length === 0) {\n          Notiflix.Notify.failure(\n            'There is no images due to your request. Please specify your query',\n          );\n          setHits(0);\n        }\n        setImages(prevImages => [...prevImages, ...images.data.hits]);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          'There is no images due to your request. Please specify your query',\n        );\n        setHits(0);\n      })\n      .finally(() => {\n        showLoadMoreBtn(false);\n        bottomScroll();\n      });\n  }, [name, page]);\n\n  // ---------- show button Load More ----------\n\n  const showLoadMoreBtn = status => {\n    return setShowLoader(status);\n  };\n\n  // ---------- show Modal window ----------\n\n  const showModal = value => {\n    setShowModalWindow(value);\n  };\n\n  // ---------- image link in Modal window ----------\n\n  const addImageSrc = data => {\n    setModalImg(data);\n  };\n\n  // ---------- state update due to Input or Load more btn click ----------\n\n  const addValues = value => {\n    if (value.image) {\n      setImages([]);\n      setName(value.image);\n      setPage(value.page);\n    } else {\n      setPage(value.page);\n    }\n  };\n\n  // ---------- scroll down to current page ----------\n\n  const bottomScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  // ---------- render ----------\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={addValues} />\n\n      <ImageGallery>\n        <ImageGalleryItem\n          imageGallery={images}\n          showModal={showModal}\n          addImageSrc={addImageSrc}\n        />\n      </ImageGallery>\n\n      {showLoader && (\n        <Loader\n          type=\"Puff\"\n          color=\"rgba(250, 128, 114)\"\n          height={80}\n          width={80}\n          className=\"Loader\"\n        />\n      )}\n\n      {!showLoader && hits >= 12 && (\n        <Button totalHits={hits} onSubmit={addValues} currentPage={page} />\n      )}\n\n      {showModalWindow && (\n        <Modal\n          modalImg={modalImg}\n          showLoader={showModal}\n          showModal={showModal}\n        />\n      )}\n    </div>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     images: [],\n//     name: '',\n//     page: null,\n//     hits: 0,\n\n//     modalImg: '',\n\n//     showLoader: false,\n//     showModal: false,\n//   };\n//   // ---------- show button Load More ----------\n//   showLoadMoreBtn = status => {\n//     this.setState({ showLoader: status });\n//   };\n//   // ---------- show Modal window ----------\n//   showModal = value => {\n//     this.setState({ showModal: value });\n//   };\n//   // ---------- image link in Modal window ----------\n//   addImageSrc = data => {\n//     this.setState({ modalImg: data });\n//   };\n//   // ---------- state update due to Input or Load more btn click ----------\n//   addValues = value => {\n//     value.image\n//       ? this.setState({\n//           images: [],\n//           name: value.image,\n//           page: value.page,\n//           hits: value.hits,\n//         })\n//       : this.setState({\n//           page: value.page,\n//           hits: value.hits,\n//         });\n//   };\n//   // ---------- scroll down to current page ----------\n//   bottomScroll = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n//   // ---------- backend request with axios ----------\n//   dataRequestAPI = () => {\n//     const API_URL = 'https://pixabay.com/api/';\n//     const API_KEY = '19797525-803e10272823be06aee41a8f4';\n//     const API = `${API_URL}?q=${this.state.name}&page=${this.state.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n//     this.showLoadMoreBtn(true);\n\n//     axios\n//       .get(API)\n//       .then(images => {\n//         if (images.data.hits.length === 0) {\n//           Notiflix.Notify.failure(\n//             'There is no images due to your request. Please specify your query',\n//           );\n//         }\n\n//         this.setState(prevState => {\n//           return {\n//             images: [...prevState.images, ...images.data.hits],\n//             hits: prevState.hits + images.data.hits.length,\n//           };\n//         });\n\n//         if (this.state.hits >= images.data.totalHits) {\n//           this.setState({ hits: 0 });\n//         }\n\n//         this.bottomScroll();\n//       })\n//       .catch(error => {\n//         Notiflix.Notify.failure(\n//           'There is no images due to your request. Please specify your query',\n//         );\n//       })\n//       .finally(() => this.showLoadMoreBtn(false));\n//   };\n//   // ---------- new backend request if changed Input or Page ----------\n//   componentDidUpdate(prevProps, prevState) {\n//     if (\n//       this.state.name !== prevState.name ||\n//       this.state.page !== prevState.page\n//     ) {\n//       this.dataRequestAPI();\n//     }\n//   }\n//   // ---------- render ----------\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={this.addValues} />\n\n//         <ImageGallery>\n//           <ImageGalleryItem\n//             imageGallery={this.state.images}\n//             showModal={this.showModal}\n//             addImageSrc={this.addImageSrc}\n//           />\n//         </ImageGallery>\n\n//         {this.state.showLoader && (\n//           <Loader\n//             type=\"Puff\"\n//             color=\"rgba(250, 128, 114)\"\n//             height={80}\n//             width={80}\n//             className=\"Loader\"\n//           />\n//         )}\n\n//         <Button\n//           totalHits={this.state.hits}\n//           onSubmit={this.addValues}\n//           currentPage={this.state.page}\n//         />\n\n//         {this.state.showModal && (\n//           <Modal\n//             modalImg={this.state.modalImg}\n//             showLoader={this.state.showModal}\n//             showModal={this.showModal}\n//           />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}